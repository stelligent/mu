---
AWSTemplateFormatVersion: '2010-09-09'
Description: MU IAM role for CloudFormation
Parameters:
  Namespace:
    Type: String
    Description: Namespace for stack prefixes
Resources:
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Namespace}-cloudformation-common-${AWS::Region}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: deploy-bucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - s3:CreateBucket
            - s3:DeleteBucket
            - s3:DeleteBucketPolicy
            - s3:PutBucketPolicy
            Resource: '*'
            Effect: Allow
      - PolicyName: deploy-vpc
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - ec2:CreateVpc
            - ec2:DeleteVpc
            - ec2:CreateInternetGateway
            - ec2:DeleteInternetGateway
            - ec2:AllocateAddress
            - ec2:ReleaseAddress
            - ec2:DescribeInternetGateways
            - ec2:DescribeVpcs
            - ec2:DescribeAddresses
            - ec2:DescribeAvailabilityZones
            - ec2:CreateTags
            - ec2:DescribeTags
            - ec2:DeleteTags
            - ec2:ModifyVpcAttribute
            - ec2:CreateRouteTable
            - ec2:DescribeRouteTables
            - ec2:DeleteRouteTable
            - ec2:CreateNetworkAcl
            - ec2:CreateNetworkAclEntry
            - ec2:DescribeNetworkAcls
            - ec2:DeleteNetworkAcl
            - ec2:DeleteNetworkAclEntry
            - ec2:AttachInternetGateway
            - ec2:DetachInternetGateway
            - ec2:DescribeAccountAttributes
            - ec2:CreateSubnet
            - ec2:DescribeSubnets
            - ec2:DeleteSubnet
            - ec2:ModifySubnetAttribute
            - ec2:AssociateRouteTable
            - ec2:DisassociateRouteTable
            - ec2:CreateNatGateway
            - ec2:DeleteNatGateway
            - ec2:DescribeNatGateways
            - ec2:CreateRoute
            - ec2:DeleteRoute
            - ec2:DescribeSecurityGroups
            - ec2:CreateSecurityGroup
            - ec2:DeleteSecurityGroup
            - ec2:AuthorizeSecurityGroupEgress
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:RevokeSecurityGroupEgress
            - ec2:RevokeSecurityGroupIngress
            - ec2:ReplaceNetworkAclAssociation
            - ec2:ReplaceNetworkAclEntry
            - ec2:RunInstances
            - ec2:TerminateInstances
            - ec2:DescribeInstances
            Resource: '*'
            Effect: Allow
      - PolicyName: deploy-elb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - elasticloadbalancing:CreateLoadBalancer
            - elasticloadbalancing:DescribeLoadBalancers
            - elasticloadbalancing:DescribeLoadBalancerAttributes
            - elasticloadbalancing:ModifyLoadBalancerAttributes
            - elasticloadbalancing:DeleteLoadBalancer
            - elasticloadbalancing:CreateListener
            - elasticloadbalancing:ModifyListener
            - elasticloadbalancing:DescribeListeners
            - elasticloadbalancing:DeleteListener
            - elasticloadbalancing:CreateRule
            - elasticloadbalancing:DescribeRules
            - elasticloadbalancing:DeleteRule
            - elasticloadbalancing:ModifyRule
            - elasticloadbalancing:SetRulePriorities
            - elasticloadbalancing:SetSecurityGroups
            - elasticloadbalancing:SetSubnets
            - elasticloadbalancing:CreateTargetGroup
            - elasticloadbalancing:DescribeTargetGroups
            - elasticloadbalancing:DescribeTargetGroupAttributes
            - elasticloadbalancing:ModifyTargetGroup
            - elasticloadbalancing:ModifyTargetGroupAttributes
            - elasticloadbalancing:DeleteTargetGroup
            - elasticloadbalancing:DescribeSSLPolicies
            - elasticloadbalancing:DescribeTags
            - elasticloadbalancing:AddTags
            - elasticloadbalancing:RemoveTags
            - elasticloadbalancing:DescribeTargetHealth
            Resource: '*'
            Effect: Allow
      - PolicyName: update-route53
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - route53:CreateHostedZone
            - route53:DeleteHostedZone
            - route53:ChangeResourceRecordSets
            - route53:ChangeTagsForResource
            - route53:GetHostedZone
            - route53:GetChange
            - route53:ListHostedZones
            - route53:ListResourceRecordSets
            - route53:ListTagsForResource
            - route53:ListTagsForResources
            - route53:ListQueryLoggingConfigs
            - route53:UpdateHostedZoneComment
            Resource: '*'
            Effect: Allow
      - PolicyName: update-servicediscovery
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - servicediscovery:CreatePrivateDnsNamespace
            - servicediscovery:CreateService
            - servicediscovery:DeleteNamespace
            - servicediscovery:DeleteService
            - servicediscovery:GetNamespace
            - servicediscovery:GetService
            - servicediscovery:GetOperation
            - servicediscovery:ListNamespaces
            - servicediscovery:ListServices
            - servicediscovery:ListOperations
            - servicediscovery:UpdateService
            Resource: '*'
            Effect: Allow
      - PolicyName: deploy-cluster
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
            - logs:DeleteLogGroup
            - logs:DeleteLogStream
            - ecs:DescribeClusters
            - ecs:CreateCluster
            - ecs:DeleteCluster
            - eks:DescribeCluster
            - eks:CreateCluster
            - eks:DeleteCluster
            - autoscaling:CreateLaunchConfiguration
            - autoscaling:DescribeLaunchConfigurations
            - autoscaling:DeleteLaunchConfiguration
            - autoscaling:CreateAutoScalingGroup
            - autoscaling:UpdateAutoScalingGroup
            - autoscaling:DescribeAutoScalingGroups
            - autoscaling:DeleteAutoScalingGroup
            - autoscaling:SetDesiredCapacity
            - autoscaling:PutScalingPolicy
            - autoscaling:DeletePolicy
            - autoscaling:DescribeAutoScalingInstances
            - autoscaling:DescribeScalingActivities
            - autoscaling:DescribePolicies
            - autoscaling:DescribeLoadBalancerTargetGroups
            - autoscaling:DescribeScheduledActions
            - autoscaling:DetachLoadBalancerTargetGroups
            - autoscaling:CreateOrUpdateTags
            - autoscaling:DescribeTags
            - autoscaling:DeleteTags
            - autoscaling:TerminateInstanceInAutoScalingGroup
            - ssm:CreateAssociation
            - ssm:DescribeAssociation
            - ssm:DeleteAssociation
            - ssm:ListAssociations
            - ssm:UpdateAssociationStatus
            #
            # the cloudwatch:PutRule & cloudwatch:PutTargets
            # are documented under http://docs.aws.amazon.com/AmazonCloudWatchEvents/latest/APIReference/API_PutRule.html
            # but were filtered out by CFN. However, they appear to be under events:
            # according to https://iam.cloudonaut.io/reference/events/PutRule.html
            # and https://iam.cloudonaut.io/reference/events/PutTargets.html
            # Therefore, commenting out these next two lines: (timbaileyjones)
            #
            #- cloudwatch:PutRule
            #- cloudwatch:PutTargets
            - cloudwatch:PutMetricAlarm
            - cloudwatch:DeleteAlarms
            - cloudwatch:DescribeAlarmsForMetric
            - cloudwatch:ListMetrics
            Resource: '*'
            Effect: Allow
          - Action:
            - iam:PassRole
            Resource:
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-environment-*-instance-${AWS::Region}
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-environment-*-eks-service-${AWS::Region}
            Effect: Allow
      - PolicyName: deploy-service
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - ecs:CreateService
            - ecs:DeleteService
            - ecs:UpdateService
            - ecs:DescribeServices
            - ecs:ListTaskDefinitions
            - ecs:RegisterTaskDefinition
            - ecs:DescribeTaskDefinition
            - ecs:DeregisterTaskDefinition
            - events:DeleteRule
            - events:DescribeRule
            - events:DisableRule
            - events:EnableRule
            - events:ListRuleNamesByTarget
            - events:ListRules
            - events:ListTargetsByRule
            - events:PutEvents
            - events:PutRule
            - events:PutTargets
            - events:RemoveRule
            - events:RemoveTargets
            Resource: '*'
            Effect: Allow
          - Action:
            - logs:CreateLogGroup
            - logs:DescribeLogGroups
            - logs:DeleteLogGroup
            - logs:DeleteLogStream
            Resource: '*'
            Effect: Allow
          - Action:
            - codedeploy:CreateApplication
            - codedeploy:GetApplication
            - codedeploy:UpdateApplication
            - codedeploy:DeleteApplication
            - codedeploy:CreateDeploymentGroup
            - codedeploy:GetDeploymentGroup
            - codedeploy:UpdateDeploymentGroup
            - codedeploy:DeleteDeploymentGroup
            - codedeploy:CreateDeployment
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            - codedeploy:GetApplicationRevision
            - codedeploy:ListApplicationRevisions
            - codedeploy:ListDeployments
            - codedeploy:StopDeployment
            Resource: '*'
            Effect: Allow
          - Action:
            - autoscaling:AttachLoadBalancerTargetGroups
            - autoscaling:DescribeLoadBalancerTargetGroups
            - autoscaling:DetachLoadBalancerTargetGroups
            Resource: '*'
            Effect: Allow
          - Action:
            - application-autoscaling:DescribeScalableTarget
            - application-autoscaling:DescribeScalableTargets
            - application-autoscaling:DescribeScalingActivities
            - application-autoscaling:DescribeScalingPolicies
            - application-autoscaling:DescribeScheduledActions
            - application-autoscaling:PutScalingPolicy
            - application-autoscaling:DeleteScalingPolicy
            - application-autoscaling:RegisterScalableTarget
            - application-autoscaling:DeregisterScalableTarget
            Resource: '*'
            Effect: Allow
          - Action:
            - iam:PassRole
            Resource:
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-service-*-task-${AWS::Region}
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-service-*-events-${AWS::Region}
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-service-*-service-${AWS::Region}
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-service-*-instance-${AWS::Region}
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-service-*-codedeploy-${AWS::Region}
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-service-*-autoscaling-${AWS::Region}
            Effect: Allow
      - PolicyName: deploy-database
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - ec2:CreateSecurityGroup
            - ec2:DeleteSecurityGroup
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:RevokeSecurityGroupIngress
            - ec2:AuthorizeSecurityGroupEgress
            - ec2:RevokeSecurityGroupEgress
            - ssm:GetParameters
            Resource: '*'
            Effect: Allow
          - Action:
            - rds:DescribeDBClusterParameterGroups
            - rds:DescribeDBClusterSnapshots
            - rds:DescribeDBClusters
            - rds:DescribeDBInstances
            - rds:DescribeDBInstanceReadReplicas
            - rds:DescribeDBParameterGroups
            - rds:DescribeDBSecurityGroups
            - rds:DescribeDBSnapshots
            - rds:DescribeDBSubnetGroups
            - rds:CreateOptionGroups
            - rds:CreateDBClusterParameterGroup
            - rds:CreateDBClusterSnapshot
            - rds:CreateDBCluster
            - rds:CreateDBInstance
            - rds:CreateDBInstanceReadReplica
            - rds:CreateDBParameterGroup
            - rds:CreateDBSecurityGroup
            - rds:CreateDBSnapshot
            - rds:CreateDBSubnetGroup
            - rds:CreateOptionGroup
            - rds:ModifyDBClusterParameterGroup
            - rds:ModifyDBCluster
            - rds:ModifyDBInstance
            - rds:ModifyDBParameterGroup
            - rds:ModifyDBSnapshotAttribute
            - rds:ModifyDBSubnetGroup
            - rds:ModifyOptionGroup
            - rds:DeleteDBParameterGroup
            - rds:DeleteDBInstance
            - rds:DeleteDBClusterParameterGroup
            - rds:DeleteDBCluster
            - rds:DeleteDBSecurityGroup
            - rds:DeleteDBSnapshot
            - rds:DeleteDBSubnetGroup
            - rds:DeleteOptionGroup
            - rds:AddTagsToResource
            - rds:ListTagsToResource
            - rds:RemoveTagsToResource
            - rds:AuthorizeDBSecurityGroupIngress
            - rds:RevokeDBSecurityGroupIngress
            Resource: '*'
            Effect: Allow
      - PolicyName: service-linked-roles
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - iam:CreateServiceLinkedRole
            - iam:PutRolePolicy
            Resource: !Sub arn:${AWS::Partition}:iam::*:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS*
            Condition:
              StringLike:
                iam:AWSServiceName: ecs.amazonaws.com
            Effect: Allow
          - Action:
            - iam:CreateServiceLinkedRole
            - iam:PutRolePolicy
            Resource: !Sub arn:${AWS::Partition}:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing*
            Condition:
              StringLike:
                iam:AWSServiceName: elasticloadbalancing.amazonaws.com
            Effect: Allow
          - Action:
            - iam:CreateServiceLinkedRole
            - iam:PutRolePolicy
            Resource: !Sub arn:${AWS::Partition}:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS*
            Condition:
              StringLike:
                iam:AWSServiceName: rds.amazonaws.com
            Effect: Allow
      - PolicyName: aws-batch-jobs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - batch:RegisterJobDefinition
            - batch:DeregisterJobDefinition
            - batch:DescribeJobDefinitions
            Resource: '*'
            Effect: Allow
          - Action:
            - iam:PassRole
            Resource:
            - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${Namespace}-service-*-batchjob-${AWS::Region}
            Effect: Allow
Outputs:
  CloudFormationRoleArn:
    Description: Role assummed by CloudFormation
    Value: !GetAtt CloudFormationRole.Arn
