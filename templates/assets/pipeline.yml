---
AWSTemplateFormatVersion: '2010-09-09'
Description: MU pipeline using CodePipeline and CodeBuild for continuous delivery
Parameters:
  Namespace:
    Type: String
    Description: Namespace for stack prefixes
  ServiceName:
    Type: String
    Description: Name of service used for resource namespace
  PipelineBucket:
    Type: String
    Description: Name of bucket to use for the CodePipeline artifacts
  SourceProvider:
    Type: String
    Description: Provider for source repo
    Default: "GitHub"
    AllowedValues:
    - GitHub
    - CodeCommit
    - S3
  SourceRepo:
    Type: String
    Description: Provider specific repository
  SourceBranch:
    Type: String
    Description: Source Branch
    Default: "master"
  SourceBucket:
    Type: String
    Description: Source Bucket
    Default: ""
  SourceObjectKey:
    Type: String
    Description: Source Object Key
    Default: ""
  GitHubToken:
    NoEcho: true
    Type: String
    Default: ""
    Description: Secret. It might look something like 9b189a1654643522561f7b3ebd44a1531a4287af OAuthToken with access to Repo. Go to https://github.com/settings/tokens
  BuildType:
    Type: String
    Default: "LINUX_CONTAINER"
    Description: The build container type to use for building the app
  BuildComputeType:
    Type: String
    Default: "BUILD_GENERAL1_SMALL"
    Description: The build compute type to use for building the app
  BuildImage:
    Type: String
    Default: "aws/codebuild/ubuntu-base:14.04"
    Description: The build image to use for building the app
  TestType:
    Type: String
    Default: "LINUX_CONTAINER"
    Description: The build container type to use for testing the app
  TestComputeType:
    Type: String
    Default: "BUILD_GENERAL1_SMALL"
    Description: The build compute type to use for testing the app
  TestImage:
    Type: String
    Default: "aws/codebuild/ubuntu-base:14.04"
    Description: The build image to use for testing the app
  MuType:
    Type: String
    Default: "LINUX_CONTAINER"
    Description: The build container type to use for mu commands
  MuComputeType:
    Type: String
    Default: "BUILD_GENERAL1_SMALL"
    Description: The build compute type to use for mu commands
  MuImage:
    Type: String
    Default: "aws/codebuild/docker:17.09.0"
    Description: The build image to use for mu commands
  MuDownloadBaseurl:
    Type: String
    Default: "https://github.com/stelligent/mu/releases/download"
    Description: The base url to install mu from
  MuDownloadVersion:
    Type: String
    Description: The version of mu to install in CodeBuild
  MuDownloadFile:
    Type: String
    Default: "mu-linux-amd64"
    Description: The name of the mu file to download to install
  DefaultBuildspec:
    Type: String
    Description: The default buildspec to use
  MuFile:
    Type: String
    Description: Path to mu.yml, relative to GitHubRepo
    Default: "mu.yml"
  AcptEnv:
    Type: String
    Description: Name of mu environment to deploy to for testing
    Default: "acceptance"
  ProdEnv:
    Type: String
    Description: Name of mu environment to deploy to for production
    Default: "production"
  EnableBuildStage:
    Type: String
    Description: Enable build stage
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
  EnableAcptStage:
    Type: String
    Description: Enable acceptance stage
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
  EnableProdStage:
    Type: String
    Description: Enable prod stage
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
  CodePipelineKeyArn:
    Type: String
    Description: KMS key for CodePipeline
  CodePipelineRoleArn:
    Type: String
    Description: IAM Role for CodePipeline
  CodeBuildCIRoleArn:
    Type: String
    Description: IAM Role for CodeBuild CI actions
    Default: ""
  CodeBuildCDAcptRoleArn:
    Type: String
    Description: IAM Role for CodeBuild CD actions in ACPT
    Default: ""
  CodeBuildCDProdRoleArn:
    Type: String
    Description: IAM Role for CodeBuild CD actions in PROD
    Default: ""
  MuAcptRoleArn:
    Type: String
    Description: IAM Role for Acpt Stage - used for cross account access
    Default: ""
  MuProdRoleArn:
    Type: String
    Description: IAM Role for Prod Stage - used for cross account access
    Default: ""
  PipelineBuildAcceptanceTimeout:
    Type: Number
    Description: The number of minutes after which AWS CodeBuild stops the build if it's not complete
    Default: 30
    MinValue: 5
    MaxValue: 480
  PipelineBuildTimeout:
    Type: Number
    Description: The number of minutes after which AWS CodeBuild stops the build if it's not complete
    Default: 30
    MinValue: 5
    MaxValue: 480
  PipelineBuildProductionTimeout:
    Type: Number
    Description: The number of minutes after which AWS CodeBuild stops the build if it's not complete
    Default: 30
    MinValue: 5
    MaxValue: 480
Conditions:
  IsS3:
    "Fn::And":
    - "Fn::Equals":
        - !Ref SourceProvider
        - 'S3'
    - "Fn::Not":
      - "Fn::Equals":
        - ""
        - !Ref SourceBucket
    - "Fn::Not":
      - "Fn::Equals":
        - ""
        - !Ref SourceObjectKey
  IsCodeCommit:
    "Fn::Equals":
      - !Ref SourceProvider
      - 'CodeCommit'
  IsGitHub:
    "Fn::Equals":
      - !Ref SourceProvider
      - 'GitHub'
  HasGitHubToken:
    "Fn::Not":
      - "Fn::Equals":
        - ""
        - !Ref GitHubToken
  IsBuildEnabled:
    "Fn::Equals":
      - !Ref EnableBuildStage
      - 'true'
  IsAcptEnabled:
    "Fn::Equals":
      - !Ref EnableAcptStage
      - 'true'
  IsProdEnabled:
    "Fn::Equals":
      - !Ref EnableProdStage
      - 'true'
Resources:
  CodeBuildArtifact:
    Type: AWS::CodeBuild::Project
    Condition: IsBuildEnabled
    Properties:
      Name: !Sub ${Namespace}-pipeline-${ServiceName}-artifact
      EncryptionKey: !Ref CodePipelineKeyArn
      Description: Build artifact from source
      ServiceRole: !Ref CodeBuildCIRoleArn
      Cache:
        Type: S3
        Location: !Sub ${PipelineBucket}/${Namespace}-${ServiceName}/_cache/artifact
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref BuildType
        ComputeType: !Ref BuildComputeType
        Image: !Sub ${BuildImage}
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30
  CodeBuildImage:
    Type: AWS::CodeBuild::Project
    Condition: IsBuildEnabled
    Properties:
      Name: !Sub ${Namespace}-pipeline-${ServiceName}-image
      EncryptionKey: !Ref CodePipelineKeyArn
      Description: Build image from artifact
      ServiceRole: !Ref CodeBuildCIRoleArn
      Cache:
        Type: S3
        Location: !Sub ${PipelineBucket}/${Namespace}-${ServiceName}/_cache/image
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref MuType
        ComputeType: !Ref MuComputeType
        Image: !Sub ${MuImage}
        EnvironmentVariables:
         - Name: MU_NAMESPACE
           Value: !Ref Namespace
         - Name: DOCKER_API_VERSION
           Value: 1.24
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            build:
              commands:
                - curl -sL ${MuDownloadBaseurl}/v${MuDownloadVersion}/${MuDownloadFile} -o /usr/bin/mu
                - chmod +rx /usr/bin/mu
                - mu -c ${MuFile} svc push -k ${CodePipelineKeyArn}
          artifacts:
            files:
              - ${MuFile}
      TimeoutInMinutes: !Ref PipelineBuildTimeout
  DeployAcceptance:
    Type: AWS::CodeBuild::Project
    Condition: IsAcptEnabled
    Properties:
      Name: !Sub ${Namespace}-pipeline-${ServiceName}-deploy-acceptance
      EncryptionKey: !Ref CodePipelineKeyArn
      Description: Deploy image to test environment
      ServiceRole: !Ref CodeBuildCDAcptRoleArn
      Cache:
        Type: S3
        Location: !Sub ${PipelineBucket}/${Namespace}-${ServiceName}/_cache/deploy-acceptance
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref MuType
        ComputeType: !Ref MuComputeType
        Image: !Sub ${MuImage}
        EnvironmentVariables:
         - Name: MU_NAMESPACE
           Value: !Ref Namespace
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          env:
            variables:
              DEFAULT_BUILDSPEC: "${DefaultBuildspec}"
          phases:
            build:
              commands:
                - curl -sL ${MuDownloadBaseurl}/v${MuDownloadVersion}/${MuDownloadFile} -o /usr/bin/mu
                - chmod +rx /usr/bin/mu
                - mu -c ${MuFile} --assume-role ${MuAcptRoleArn} --disable-iam env up ${AcptEnv} 
                - mu -c ${MuFile} --assume-role ${MuAcptRoleArn} --disable-iam db up ${AcptEnv} 
                - mu -c ${MuFile} --assume-role ${MuAcptRoleArn} --disable-iam svc deploy ${AcptEnv}
                - mu -c ${MuFile} --assume-role ${MuAcptRoleArn} env show ${AcptEnv} -f json > env.json
                - mu -c ${MuFile} --assume-role ${MuAcptRoleArn} env show ${AcptEnv} -f shell > mu-env.sh
                - mv buildspec-test.yml buildspec.yml || echo "$DEFAULT_BUILDSPEC" > buildspec.yml
          artifacts:
            files:
              - '**/*'
      TimeoutInMinutes: 30
  TestAcceptance:
    Type: AWS::CodeBuild::Project
    Condition: IsAcptEnabled
    Properties:
      Name: !Sub ${Namespace}-pipeline-${ServiceName}-test-acceptance
      EncryptionKey: !Ref CodePipelineKeyArn
      Description: Test in the acceptance environment
      ServiceRole: !Ref CodeBuildCIRoleArn
      Cache:
        Type: S3
        Location: !Sub ${PipelineBucket}/${Namespace}-${ServiceName}/_cache/test-acceptance
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref TestType
        ComputeType: !Ref TestComputeType
        Image: !Sub ${TestImage}
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: !Ref PipelineBuildAcceptanceTimeout
  DeployProduction:
    Type: AWS::CodeBuild::Project
    Condition: IsProdEnabled
    Properties:
      Name: !Sub ${Namespace}-pipeline-${ServiceName}-deploy-production
      EncryptionKey: !Ref CodePipelineKeyArn
      Description: Deploy image to prod environment
      ServiceRole: !Ref CodeBuildCDProdRoleArn
      Cache:
        Type: S3
        Location: !Sub ${PipelineBucket}/${Namespace}-${ServiceName}/_cache/deploy-production
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref MuType
        ComputeType: !Ref MuComputeType
        Image: !Sub ${MuImage}
        EnvironmentVariables:
         - Name: MU_NAMESPACE
           Value: !Ref Namespace
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          env:
            variables:
              DEFAULT_BUILDSPEC: "${DefaultBuildspec}"
          phases:
            build:
              commands:
                - curl -sL ${MuDownloadBaseurl}/v${MuDownloadVersion}/${MuDownloadFile} -o /usr/bin/mu
                - chmod +rx /usr/bin/mu
                - mu -c ${MuFile} --assume-role ${MuProdRoleArn} --disable-iam env up ${ProdEnv} 
                - mu -c ${MuFile} --assume-role ${MuProdRoleArn} --disable-iam db up ${ProdEnv} 
                - mu -c ${MuFile} --assume-role ${MuProdRoleArn} --disable-iam svc deploy ${ProdEnv}
                - mu -c ${MuFile} --assume-role ${MuProdRoleArn} env show ${ProdEnv} -f json > env.json
                - mu -c ${MuFile} --assume-role ${MuProdRoleArn} env show ${ProdEnv} -f shell > mu-env.sh
                - mv buildspec-prod.yml buildspec.yml || echo "$DEFAULT_BUILDSPEC" > buildspec.yml
          artifacts:
            files:
              - '**/*'
      TimeoutInMinutes: 30
  TestProduction:
    Type: AWS::CodeBuild::Project
    Condition: IsProdEnabled
    Properties:
      Name: !Sub ${Namespace}-pipeline-${ServiceName}-test-production
      EncryptionKey: !Ref CodePipelineKeyArn
      Description: Test in the production environment
      ServiceRole: !Ref CodeBuildCIRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref TestType
        ComputeType: !Ref TestComputeType
        Image: !Sub ${TestImage}
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: !Ref PipelineBuildProductionTimeout
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !Ref CodePipelineRoleArn
      Name: !Sub ${Namespace}-${ServiceName}
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          InputArtifacts: []
          OutputArtifacts:
          - Name: SourceOutput
          ActionTypeId:
            Fn::If:
            - IsS3
            - Category: Source
              Owner: AWS
              Version: '1'
              Provider: S3
            -
              Fn::If:
              - IsGitHub
              - Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              - Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
          Configuration:
            Fn::If:
            - IsS3
            - S3Bucket: !Ref SourceBucket
              S3ObjectKey: !Ref SourceObjectKey
            -
              Fn::If:
              - IsGitHub
              - Owner: {"Fn::Select": ["0", {"Fn::Split":["/", {"Ref": "SourceRepo"}]}]}
                Repo: {"Fn::Select": ["1", {"Fn::Split":["/", {"Ref": "SourceRepo"}]}]}
                Branch: !Ref SourceBranch
                OAuthToken:
                  Fn::If:
                    - HasGitHubToken
                    - !Ref GitHubToken
                    - !Ref AWS::NoValue
              - RepositoryName: !Ref SourceRepo
                BranchName: !Ref SourceBranch
          RunOrder: 10
      - Fn::If:
        - IsBuildEnabled
        - Name: Build
          Actions:
          - Name: Artifact
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: '1'
              Provider: CodeBuild
            InputArtifacts:
            - Name: SourceOutput
            OutputArtifacts:
            - Name: ArtifactOutput
            Configuration:
              ProjectName: !Ref CodeBuildArtifact
            RunOrder: 10
          - Name: Image
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: '1'
              Provider: CodeBuild
            InputArtifacts:
            - Name: ArtifactOutput
            OutputArtifacts:
            - Name: ImageOutput
            Configuration:
              ProjectName: !Ref CodeBuildImage
            RunOrder: 20
        - !Ref AWS::NoValue
      - Fn::If:
        - IsAcptEnabled
        - Name: Acceptance
          Actions:
          - Name: Deploy
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: '1'
              Provider: CodeBuild
            InputArtifacts:
            - Name: SourceOutput
            OutputArtifacts:
            - Name: DeployAcceptanceOutput
            Configuration:
              ProjectName: !Ref DeployAcceptance
            RunOrder: 10
          - Name: Test
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: '1'
              Provider: CodeBuild
            InputArtifacts:
            - Name: DeployAcceptanceOutput
            OutputArtifacts:
            - Name: TestAcceptanceOutput
            Configuration:
              ProjectName: !Ref TestAcceptance
            RunOrder: 20
        - !Ref AWS::NoValue
      - Fn::If:
        - IsProdEnabled
        - Name: Production
          Actions:
          - Name: Approve
            ActionTypeId:
              Category: Approval
              Owner: AWS
              Version: '1'
              Provider: Manual
            Configuration:
              CustomData: Approve deployment to production
              NotificationArn: !Ref PipelineNotificationTopic
            RunOrder: 10
          - Name: Deploy
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: '1'
              Provider: CodeBuild
            InputArtifacts:
            - Name: SourceOutput
            OutputArtifacts:
            - Name: DeployProductionOutput
            Configuration:
              ProjectName: !Ref DeployProduction
            RunOrder: 20
          - Name: Test
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: '1'
              Provider: CodeBuild
            InputArtifacts:
            - Name: DeployProductionOutput
            OutputArtifacts:
            - Name: TestProductionOutput
            Configuration:
              ProjectName: !Ref TestProduction
            RunOrder: 30
        - !Ref AWS::NoValue
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !Ref CodePipelineKeyArn
          Type: KMS
        Location: !Ref PipelineBucket
  PipelineNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${Namespace}-pipeline-${ServiceName}-notification
  PipelineNotificationTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref PipelineNotificationTopic
      PolicyDocument:
        Version: "2012-10-17"
        Id: "__default_policy_ID"
        Statement:
        - Sid: AWSEvents
          Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sns:Publish
          Resource: !Ref PipelineNotificationTopic

  PipelineSucceededEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub Pipeline Succeeded Event Rule for service ${ServiceName}
      EventPattern:
        source:
        - aws.codepipeline
        detail-type:
        - CodePipeline Pipeline Execution State Change
        detail:
          state:
          - SUCCEEDED
          pipeline:
          - !Sub ${Namespace}-${ServiceName}
      State: "ENABLED"
      Targets:
      - Arn: !Ref PipelineNotificationTopic
        Id: "SucceededTopic"
        InputTransformer:
          InputTemplate:
            Fn::Sub: >
              "Pipeline <pipeline> has succeeded. Details available at https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/<pipeline>"
          InputPathsMap:
            pipeline: "$.detail.pipeline"
  PipelineFailedEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub Pipeline Failed Event Rule for service ${ServiceName}
      EventPattern:
        source:
        - aws.codepipeline
        detail-type:
        - CodePipeline Pipeline Execution State Change
        detail:
          state:
          - FAILED
          pipeline:
          - !Sub ${Namespace}-${ServiceName}
      State: "ENABLED"
      Targets:
      - Arn: !Ref PipelineNotificationTopic
        Id: "FailedTopic"
        InputTransformer:
          InputTemplate:
            Fn::Sub: >
              "Pipeline <pipeline> has failed. Details available at https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/<pipeline>"
          InputPathsMap:
            pipeline: "$.detail.pipeline"
Outputs:
  CodePipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
  PipelineName:
    Value: !Sub ${Pipeline}
    Description: Pipeline Name
  PipelineNotificationTopicArn:
    Value: !Ref PipelineNotificationTopic
    Description: SNS Topic for pipeline notifications
