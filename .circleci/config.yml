version: 2

jobs:
  build:
    environment:
        AWS_REGION: us-west-2

    machine: true

    ## Don't build when new release tags are pushed
    branches:
      ignore:
        - /^v[0-9]/

    steps:
      - checkout

      - run:
          name: Setup Source
          command: |
            IMPORT_PATH=/home/circleci/.go_workspace/src/github.com/$CIRCLE_PROJECT_USERNAME
            APP_PATH=$IMPORT_PATH/$CIRCLE_PROJECT_REPONAME
            mkdir -p $IMPORT_PATH
            ln -sf "$(pwd)" $APP_PATH
            echo "export APP_PATH=$APP_PATH" >> $BASH_ENV

      - run:
          name: Dependencies
          command: cd $APP_PATH && make deps

      - run:
          name: Compile
          command: cd $APP_PATH && make build

      - run:
          name: Test
          command: cd $APP_PATH && make test

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: artifacts

      # The second key is for the repo homebrew-tap
      - add_ssh_keys:
          fingerprints:
            - "53:1f:d0:6f:24:2a:bf:cb:92:0f:bc:1e:14:6e:1d:72"
            - "35:fc:cc:f6:12:88:e2:56:24:17:09:36:3e:53:e6:68"

      ## In order for deploy to work, you need an environment variable set in CircleCI named "GITHUB_TOKEN" that contains
      ##  a token created from https://github.com/settings/tokens
      ##
      ## Also, an read/write SSH key needs to be created and private key added to circle ci
      ##    as per https://circleci.com/docs/adding-read-write-deployment-key/
      ##
      ## Suggest creating a machine user for the token and ssh key to limit access
      ##
      - deploy:
          name: Deploy
          command: |
            cd $APP_PATH

            git config --global user.email "cplee+mu@nektos.com"
            git config --global user.name "mu-ci"

            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              make dev-release
              make formula
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              make release
              make formula
            fi
